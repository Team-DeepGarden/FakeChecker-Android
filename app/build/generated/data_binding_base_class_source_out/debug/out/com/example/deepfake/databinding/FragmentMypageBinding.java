// Generated by view binder compiler. Do not edit!
package com.example.deepfake.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.Spinner;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.appcompat.widget.AppCompatButton;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.recyclerview.widget.RecyclerView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.deepfake.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class FragmentMypageBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final ImageView ivLogo;

  @NonNull
  public final AppCompatButton mypageBtnLogout;

  @NonNull
  public final AppCompatButton mypageBtnSignout;

  @NonNull
  public final ConstraintLayout mypageCl;

  @NonNull
  public final ImageView mypageIvProfileImage;

  @NonNull
  public final RecyclerView mypageRvLogrecord;

  @NonNull
  public final Spinner mypageSpinnerListed;

  @NonNull
  public final TextView mypageTvLogrecord;

  @NonNull
  public final TextView mypageTvNoData;

  @NonNull
  public final TextView mypageTvTitle;

  @NonNull
  public final TextView mypageTvUserId;

  @NonNull
  public final View mypageViewLine;

  private FragmentMypageBinding(@NonNull ConstraintLayout rootView, @NonNull ImageView ivLogo,
      @NonNull AppCompatButton mypageBtnLogout, @NonNull AppCompatButton mypageBtnSignout,
      @NonNull ConstraintLayout mypageCl, @NonNull ImageView mypageIvProfileImage,
      @NonNull RecyclerView mypageRvLogrecord, @NonNull Spinner mypageSpinnerListed,
      @NonNull TextView mypageTvLogrecord, @NonNull TextView mypageTvNoData,
      @NonNull TextView mypageTvTitle, @NonNull TextView mypageTvUserId,
      @NonNull View mypageViewLine) {
    this.rootView = rootView;
    this.ivLogo = ivLogo;
    this.mypageBtnLogout = mypageBtnLogout;
    this.mypageBtnSignout = mypageBtnSignout;
    this.mypageCl = mypageCl;
    this.mypageIvProfileImage = mypageIvProfileImage;
    this.mypageRvLogrecord = mypageRvLogrecord;
    this.mypageSpinnerListed = mypageSpinnerListed;
    this.mypageTvLogrecord = mypageTvLogrecord;
    this.mypageTvNoData = mypageTvNoData;
    this.mypageTvTitle = mypageTvTitle;
    this.mypageTvUserId = mypageTvUserId;
    this.mypageViewLine = mypageViewLine;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static FragmentMypageBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FragmentMypageBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.fragment_mypage, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FragmentMypageBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.iv_logo;
      ImageView ivLogo = ViewBindings.findChildViewById(rootView, id);
      if (ivLogo == null) {
        break missingId;
      }

      id = R.id.mypage_btn_logout;
      AppCompatButton mypageBtnLogout = ViewBindings.findChildViewById(rootView, id);
      if (mypageBtnLogout == null) {
        break missingId;
      }

      id = R.id.mypage_btn_signout;
      AppCompatButton mypageBtnSignout = ViewBindings.findChildViewById(rootView, id);
      if (mypageBtnSignout == null) {
        break missingId;
      }

      id = R.id.mypage_cl;
      ConstraintLayout mypageCl = ViewBindings.findChildViewById(rootView, id);
      if (mypageCl == null) {
        break missingId;
      }

      id = R.id.mypage_iv_profile_image;
      ImageView mypageIvProfileImage = ViewBindings.findChildViewById(rootView, id);
      if (mypageIvProfileImage == null) {
        break missingId;
      }

      id = R.id.mypage_rv_logrecord;
      RecyclerView mypageRvLogrecord = ViewBindings.findChildViewById(rootView, id);
      if (mypageRvLogrecord == null) {
        break missingId;
      }

      id = R.id.mypage_spinner_listed;
      Spinner mypageSpinnerListed = ViewBindings.findChildViewById(rootView, id);
      if (mypageSpinnerListed == null) {
        break missingId;
      }

      id = R.id.mypage_tv_logrecord;
      TextView mypageTvLogrecord = ViewBindings.findChildViewById(rootView, id);
      if (mypageTvLogrecord == null) {
        break missingId;
      }

      id = R.id.mypage_tv_no_data;
      TextView mypageTvNoData = ViewBindings.findChildViewById(rootView, id);
      if (mypageTvNoData == null) {
        break missingId;
      }

      id = R.id.mypage_tv_title;
      TextView mypageTvTitle = ViewBindings.findChildViewById(rootView, id);
      if (mypageTvTitle == null) {
        break missingId;
      }

      id = R.id.mypage_tv_user_id;
      TextView mypageTvUserId = ViewBindings.findChildViewById(rootView, id);
      if (mypageTvUserId == null) {
        break missingId;
      }

      id = R.id.mypage_view_line;
      View mypageViewLine = ViewBindings.findChildViewById(rootView, id);
      if (mypageViewLine == null) {
        break missingId;
      }

      return new FragmentMypageBinding((ConstraintLayout) rootView, ivLogo, mypageBtnLogout,
          mypageBtnSignout, mypageCl, mypageIvProfileImage, mypageRvLogrecord, mypageSpinnerListed,
          mypageTvLogrecord, mypageTvNoData, mypageTvTitle, mypageTvUserId, mypageViewLine);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
